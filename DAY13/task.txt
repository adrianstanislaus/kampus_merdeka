//INSERT
INSERT INTO operators
(id,name)
VALUES
(1,"Greg"),
(2,"Iwan"),
(3,"Caca")
(4,"Ronaldhino"),
(5,"Ted")

INSERT INTO product_types
(id,name)
VALUES
(1,"pulsa"),
(2,"paket data"),
(3,"lain-lain)

INSERT INTO products
(id,product_type_id,operator_id,code,name,status)
VALUES
(1,1,3,"a","produk a",3),
(2,1,3,"b","produk b",2),

INSERT INTO products
(id,product_type_id,operator_id,code,name,status)
VALUES
(4,2,1,"c","produk a",3),
(5,2,1,"d","produk d",2),
(6,2,1,"f","produk f",1)

INSERT INTO products
(id,product_type_id,operator_id,code,name,status)
VALUES
(7,3,4,"e","produk e",3),
(8,3,4,"g","produk g",2),
(9,3,4,"h","produk h",1)

INSERT INTO product_descriptions (id,description) VALUES (1,"termurah bisa dipakai di mana saja"), (2,"Terbuat dari karet"), (3,"Kesukaan mama"), (4,"Bikin hilang ingatan"), (5,"tampan dan pemberani"), (6,"bisa dipakai untuk nonton"), (7,"diambil dari serat-serat boba"), (8,"asyik")


UPDATE products SET
product_description_id = 8 Where id =9 //dilakukan untuk id lainya

INSERT INTO payment_methods (id,name,status) VALUES  (1,"Gopay",3), (2,"OVO",3), (3,"DANA",3)

INSERT INTO users
(id,name,status,dob,gender)
VALUES 
(1,"Jisoo",3,'2021-09-09',"f"),
(2,"Bambang",3,'2021-09-09',"m"),
(3,"Chad",3,'2021-09-09',"m"),
(4,"Joko",3,'2021-09-09',"m"),
(5,"Juminten",3,'2021-09-09',"f")


INSERT INTO transaction_details
(transaction_id,product_id,qty,price)
VALUES 
(1,1,1,2000),(1,2,1,2000),(1,4,1,2000),
(2,5,1,2000),(2,2,1,2000),(2,4,1,2000),
(3,1,1,2000),(3,2,1,2000),(3,4,1,2000),
(4,4,1,2000),(4,5,1,2000),(4,7,1,2000),
(5,5,1,2000),(5,2,1,2000),(2,1,1,2000),
(6,1,1,2000),(6,5,1,2000),(6,7,1,2000),
(8,1,1,2000),(8,2,1,2000),(8,6,1,2000),
(9,9,1,2000),(9,2,1,2000),(9,1,1,2000),
(10,1,1,2000),(10,2,1,2000),(10,4,1,2000),
(11,2,1,2000),(11,4,1,2000),(11,8,1,2000),
(12,1,1,2000),(12,2,1,2000),(12,4,1,2000),
(13,1,1,2000),(13,2,1,2000),(13,4,1,2000),
(14,1,1,2000),(14,5,1,2000),(14,8,1,2000),
(15,7,1,2000),(15,6,1,2000),(15,5,1,2000)


//SELECT
select name FROM users WHERE gender = "m";
select * FROM products WHERE id = 3;
select * FROM users WHERE name LIKE '%a%' AND created_at BETWEEN adddate(now(),-7) AND now() ;
SELECT COUNT(id) AS "Jumlah User Perempuan" FROM users WHERE gender= "f";
SELECT * FROM users ORDER BY name;
SELECT * FROM products LIMIT 5;

//UPDATE
UPDATE products SET
name = "product dummy" WHERE id = 1;
UPDATE transaction_details SET
qty = 3 WHERE product_id = 1;

//DELETE
DELETE FROM products where id = 1
DELETE FROM products where product_type_id = 1

JOIN, UNION, SUB-QUERY, FUNCTION
1.
SELECT * FROM transactions where user_id = 1
UNION
SELECT * FROM transactions where user_id = 2

2.
select SUM(total_price) FROM transactions where user_id =1

3.
SELECT COUNT(t.transaction_id) FROM transaction_details t INNER JOIN products p ON t.product_id = p.id WHERE p.product_type_id = 2

4.
SELECT p.*, pt.name FROM products p INNER JOIN product_types pt ON p.product_type_id = pt.id

5.
SELECT t.*,p.name,u.name FROM transactions t LEFT JOIN users u ON u.id = t.user_id LEFT JOIN transaction_details td ON td.transaction_id = t.id LEFT JOIN products p ON p.id = td.product_id

6.
DELIMITER $$
CREATE TRIGGER delete_all_transaction_details
BEFORE DELETE ON transactions for EACH ROW
BEGIN
DECLARE v_transaction_id int;
SET v_transaction_id=OLD.id
DELETE FROM transaction_details WHERE transaction_id = v_transaction_id;
END$$


7.
DELIMITER $$
CREATE TRIGGER minus_qty_transaction_detail
BEFORE DELETE ON transaction_details for EACH ROW
BEGIN
DECLARE v_transaction_detail_qty int;
DECLARE v_transaction_detail_id int;
SET v_transaction_detail_qty=OLD.qty;
SET v_transaction_detail_id=OLD.transaction_id;
UPDATE transactions
SET total_qty = total_qty - v_transaction_detail_qty
WHERE id = v_transaction_detail_id
END$$

8.
SELECT * from products where id NOT IN (SELECT product_id FROM transaction_details);